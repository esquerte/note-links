// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteLinks.Data.Context;

namespace NoteLinks.Data.Migrations
{
    [DbContext(typeof(Context.MainDataContext))]
    partial class CalendarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NoteLinks.Entities.General.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Calendars");

                    b.HasData(
                        new { Id = 1, Name = "Дни рождения родственников" },
                        new { Id = 2, Name = "Отпуска сотрудников" },
                        new { Id = 3, Name = "Поездка в Испанию" }
                    );
                });

            modelBuilder.Entity("NoteLinks.Entities.General.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalendarId");

                    b.Property<DateTime>("FromDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Text");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.ToTable("Notes");

                    b.HasData(
                        new { Id = 1, CalendarId = 1, FromDate = new DateTime(2019, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Артём", Text = "Хочет Lego" },
                        new { Id = 2, CalendarId = 1, FromDate = new DateTime(2018, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Марина", Text = "Пригласить Ивановых" },
                        new { Id = 3, CalendarId = 1, FromDate = new DateTime(2019, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Оксана Ивановна", Text = "Уехать в командировку" },
                        new { Id = 4, CalendarId = 2, FromDate = new DateTime(2019, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Серёга", Text = "Тайланд", ToDate = new DateTime(2019, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 5, CalendarId = 2, FromDate = new DateTime(2019, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Рустем", Text = "Хочет перенести на апрель", ToDate = new DateTime(2019, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 6, CalendarId = 3, FromDate = new DateTime(2019, 5, 29, 17, 40, 0, 0, DateTimeKind.Unspecified), Name = "Самолет Сургут-Москва", Text = "Взять книгу", ToDate = new DateTime(2019, 5, 29, 18, 30, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 7, CalendarId = 3, FromDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Хостел в Москве", Text = "Заезд после 15:00", ToDate = new DateTime(2019, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 8, CalendarId = 3, FromDate = new DateTime(2019, 6, 3, 9, 20, 0, 0, DateTimeKind.Unspecified), Name = "Самолет Москва-Барселона", ToDate = new DateTime(2019, 6, 3, 11, 5, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("NoteLinks.Entities.General.Note", b =>
                {
                    b.HasOne("NoteLinks.Entities.General.Calendar", "Calendar")
                        .WithMany("Notes")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
